"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAccountAvailabilitiesOutput = exports.getAccountAvailabilities = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about services availabilities for the current Linode account.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-availability).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to discover regions without specific service availability.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * export = async () => {
 *     const filtered_availabilities = await linode.getAccountAvailabilities({
 *         filters: [{
 *             name: "unavailable",
 *             values: ["Linodes"],
 *         }],
 *     });
 *     return {
 *         "regions-without-linodes": filtered_availabilities.availabilities.map(__item => __item.region),
 *     };
 * }
 * ```
 *
 * ## Filterable Fields
 *
 * * `region`
 *
 * * `unavailable`
 *
 * * `available`
 */
function getAccountAvailabilities(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getAccountAvailabilities:getAccountAvailabilities", {
        "availabilities": args.availabilities,
        "filters": args.filters,
    }, opts);
}
exports.getAccountAvailabilities = getAccountAvailabilities;
/**
 * Provides information about services availabilities for the current Linode account.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-availability).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to discover regions without specific service availability.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * export = async () => {
 *     const filtered_availabilities = await linode.getAccountAvailabilities({
 *         filters: [{
 *             name: "unavailable",
 *             values: ["Linodes"],
 *         }],
 *     });
 *     return {
 *         "regions-without-linodes": filtered_availabilities.availabilities.map(__item => __item.region),
 *     };
 * }
 * ```
 *
 * ## Filterable Fields
 *
 * * `region`
 *
 * * `unavailable`
 *
 * * `available`
 */
function getAccountAvailabilitiesOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getAccountAvailabilities:getAccountAvailabilities", {
        "availabilities": args.availabilities,
        "filters": args.filters,
    }, opts);
}
exports.getAccountAvailabilitiesOutput = getAccountAvailabilitiesOutput;
//# sourceMappingURL=getAccountAvailabilities.js.map