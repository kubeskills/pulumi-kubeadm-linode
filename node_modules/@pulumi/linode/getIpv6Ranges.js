"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getIpv6RangesOutput = exports.getIpv6Ranges = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about Linode IPv6 ranges that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-ipv6-ranges).
 *
 * > Some fields may not be accessible directly the results of this data source.
 * For additional information about a specific IPv6 range consider using the linode.Ipv6Range
 * data source.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered_ranges = linode.getIpv6Ranges({
 *     filters: [{
 *         name: "region",
 *         values: ["us-mia"],
 *     }],
 * });
 * export const ranges = filtered_ranges;
 * ```
 *
 * ## Filterable Fields
 *
 * * `range`
 *
 * * `routeTarget`
 *
 * * `prefix`
 *
 * * `region`
 */
function getIpv6Ranges(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getIpv6Ranges:getIpv6Ranges", {
        "filters": args.filters,
        "ranges": args.ranges,
    }, opts);
}
exports.getIpv6Ranges = getIpv6Ranges;
/**
 * Provides information about Linode IPv6 ranges that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-ipv6-ranges).
 *
 * > Some fields may not be accessible directly the results of this data source.
 * For additional information about a specific IPv6 range consider using the linode.Ipv6Range
 * data source.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered_ranges = linode.getIpv6Ranges({
 *     filters: [{
 *         name: "region",
 *         values: ["us-mia"],
 *     }],
 * });
 * export const ranges = filtered_ranges;
 * ```
 *
 * ## Filterable Fields
 *
 * * `range`
 *
 * * `routeTarget`
 *
 * * `prefix`
 *
 * * `region`
 */
function getIpv6RangesOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getIpv6Ranges:getIpv6Ranges", {
        "filters": args.filters,
        "ranges": args.ranges,
    }, opts);
}
exports.getIpv6RangesOutput = getIpv6RangesOutput;
//# sourceMappingURL=getIpv6Ranges.js.map