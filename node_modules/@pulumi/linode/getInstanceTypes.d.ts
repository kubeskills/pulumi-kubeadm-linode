import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides information about Linode Instance types that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-linode-types).
 *
 * ## Example Usage
 *
 * Get information about all Linode Instance types with a certain number of VCPUs:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const specific_types = linode.getInstanceTypes({
 *     filters: [{
 *         name: "vcpus",
 *         values: ["2"],
 *     }],
 * });
 * export const typeIds = specific_types.then(specific_types => specific_types.types.map(__item => __item.id));
 * ```
 *
 * Get information about all Linode Instance types:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const all_types = linode.getInstanceTypes({});
 * export const typeIds = all_types.then(all_types => all_types.types.map(__item => __item.id));
 * ```
 *
 * ## Filterable Fields
 *
 * * `class`
 *
 * * `disk`
 *
 * * `gpus`
 *
 * * `label`
 *
 * * `memory`
 *
 * * `networkOut`
 *
 * * `transfer`
 *
 * * `vcpus`
 */
export declare function getInstanceTypes(args?: GetInstanceTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceTypesResult>;
/**
 * A collection of arguments for invoking getInstanceTypes.
 */
export interface GetInstanceTypesArgs {
    filters?: inputs.GetInstanceTypesFilter[];
    /**
     * The order in which results should be returned. (`asc`, `desc`; default `asc`)
     */
    order?: string;
    /**
     * The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
     */
    orderBy?: string;
    types?: inputs.GetInstanceTypesType[];
}
/**
 * A collection of values returned by getInstanceTypes.
 */
export interface GetInstanceTypesResult {
    readonly filters?: outputs.GetInstanceTypesFilter[];
    /**
     * The ID representing the Linode Type.
     */
    readonly id: string;
    readonly order?: string;
    readonly orderBy?: string;
    readonly types?: outputs.GetInstanceTypesType[];
}
/**
 * Provides information about Linode Instance types that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-linode-types).
 *
 * ## Example Usage
 *
 * Get information about all Linode Instance types with a certain number of VCPUs:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const specific_types = linode.getInstanceTypes({
 *     filters: [{
 *         name: "vcpus",
 *         values: ["2"],
 *     }],
 * });
 * export const typeIds = specific_types.then(specific_types => specific_types.types.map(__item => __item.id));
 * ```
 *
 * Get information about all Linode Instance types:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const all_types = linode.getInstanceTypes({});
 * export const typeIds = all_types.then(all_types => all_types.types.map(__item => __item.id));
 * ```
 *
 * ## Filterable Fields
 *
 * * `class`
 *
 * * `disk`
 *
 * * `gpus`
 *
 * * `label`
 *
 * * `memory`
 *
 * * `networkOut`
 *
 * * `transfer`
 *
 * * `vcpus`
 */
export declare function getInstanceTypesOutput(args?: GetInstanceTypesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInstanceTypesResult>;
/**
 * A collection of arguments for invoking getInstanceTypes.
 */
export interface GetInstanceTypesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetInstanceTypesFilterArgs>[]>;
    /**
     * The order in which results should be returned. (`asc`, `desc`; default `asc`)
     */
    order?: pulumi.Input<string>;
    /**
     * The attribute to order the results by. See the Filterable Fields section for a list of valid fields.
     */
    orderBy?: pulumi.Input<string>;
    types?: pulumi.Input<pulumi.Input<inputs.GetInstanceTypesTypeArgs>[]>;
}
