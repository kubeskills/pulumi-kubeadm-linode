import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides information about a list of Linode VPCs that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-vpcs).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to list VPCs.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered_vpcs = linode.getVpcs({
 *     filters: [{
 *         name: "label",
 *         values: ["test"],
 *     }],
 * });
 * export const vpcs = filtered_vpcs.then(filtered_vpcs => filtered_vpcs.vpcs);
 * ```
 *
 * ## IPv6
 *
 * > **Limited Availability** IPv6 VPCs may not currently be available to all users.
 *
 * Contains information about a single IPv6 allocation under a VPC.
 *
 * * `range` - The allocated range in CIDR format.
 *
 * ## Filterable Fields
 *
 * * `id`
 *
 * * `label`
 *
 * * `description`
 *
 * * `region`
 */
export declare function getVpcs(args?: GetVpcsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcsResult>;
/**
 * A collection of arguments for invoking getVpcs.
 */
export interface GetVpcsArgs {
    filters?: inputs.GetVpcsFilter[];
    vpcs?: inputs.GetVpcsVpc[];
}
/**
 * A collection of values returned by getVpcs.
 */
export interface GetVpcsResult {
    readonly filters?: outputs.GetVpcsFilter[];
    /**
     * The unique id of this VPC.
     */
    readonly id: string;
    readonly vpcs?: outputs.GetVpcsVpc[];
}
/**
 * Provides information about a list of Linode VPCs that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-vpcs).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to list VPCs.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered_vpcs = linode.getVpcs({
 *     filters: [{
 *         name: "label",
 *         values: ["test"],
 *     }],
 * });
 * export const vpcs = filtered_vpcs.then(filtered_vpcs => filtered_vpcs.vpcs);
 * ```
 *
 * ## IPv6
 *
 * > **Limited Availability** IPv6 VPCs may not currently be available to all users.
 *
 * Contains information about a single IPv6 allocation under a VPC.
 *
 * * `range` - The allocated range in CIDR format.
 *
 * ## Filterable Fields
 *
 * * `id`
 *
 * * `label`
 *
 * * `description`
 *
 * * `region`
 */
export declare function getVpcsOutput(args?: GetVpcsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpcsResult>;
/**
 * A collection of arguments for invoking getVpcs.
 */
export interface GetVpcsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetVpcsFilterArgs>[]>;
    vpcs?: pulumi.Input<pulumi.Input<inputs.GetVpcsVpcArgs>[]>;
}
