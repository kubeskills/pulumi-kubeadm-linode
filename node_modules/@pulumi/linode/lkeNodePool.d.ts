import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Import
 *
 * LKE Node Pools can be imported using the `cluster_id,id`, e.g.
 *
 * ```sh
 * $ pulumi import linode:index/lkeNodePool:LkeNodePool my_pool 150003,12345
 * ```
 */
export declare class LkeNodePool extends pulumi.CustomResource {
    /**
     * Get an existing LkeNodePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LkeNodePoolState, opts?: pulumi.CustomResourceOptions): LkeNodePool;
    /**
     * Returns true if the given object is an instance of LkeNodePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LkeNodePool;
    readonly autoscaler: pulumi.Output<outputs.LkeNodePoolAutoscaler | undefined>;
    /**
     * ID of the LKE Cluster where to create the current Node Pool.
     */
    readonly clusterId: pulumi.Output<number>;
    /**
     * The disk encryption policy for nodes in this pool.
     */
    readonly diskEncryption: pulumi.Output<string>;
    /**
     * The k8s version of the nodes in this node pool. For LKE enterprise only and may not currently available to all users even under v4beta.
     */
    readonly k8sVersion: pulumi.Output<string>;
    /**
     * A label for the Node Pool. If not provided, it defaults to empty string.
     */
    readonly label: pulumi.Output<string>;
    /**
     * A map attribute containing key-value pairs to be added as labels to nodes in the node pool. Labels help classify your nodes and to easily select subsets of objects. To learn more, review [Add Labels and Taints to your LKE Node Pools](https://www.linode.com/docs/products/compute/kubernetes/guides/deploy-and-manage-cluster-with-the-linode-api/#add-labels-and-taints-to-your-lke-node-pools).
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The number of nodes in the Node Pool. If undefined with an autoscaler the initial node count will equal the autoscaler minimum.
     */
    readonly nodeCount: pulumi.Output<number>;
    /**
     * A list of nodes in the node pool.
     */
    readonly nodes: pulumi.Output<outputs.LkeNodePoolNode[]>;
    /**
     * An array of tags applied to the Node Pool. Tags can be used to flag node pools as externally managed, see Externally Managed Node Pools for more details.
     */
    readonly tags: pulumi.Output<string[]>;
    /**
     * Kubernetes taints to add to node pool nodes. Taints help control how pods are scheduled onto nodes, specifically allowing them to repel certain pods.
     */
    readonly taints: pulumi.Output<outputs.LkeNodePoolTaint[] | undefined>;
    /**
     * A Linode Type for all nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
     */
    readonly type: pulumi.Output<string>;
    /**
     * The strategy for updating the node pool k8s version. For LKE enterprise only and may not currently available to all users even under v4beta.
     *
     * * `autoscaler` - (Optional) If defined, an autoscaler will be enabled with the given configuration.
     *
     * * `taint` - (Optional) Kubernetes taints to add to node pool nodes. Taints help control how pods are scheduled onto nodes, specifically allowing them to repel certain pods. To learn more, review [Add Labels and Taints to your LKE Node Pools](https://www.linode.com/docs/products/compute/kubernetes/guides/deploy-and-manage-cluster-with-the-linode-api/#add-labels-and-taints-to-your-lke-node-pools).
     */
    readonly updateStrategy: pulumi.Output<string>;
    /**
     * Create a LkeNodePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LkeNodePoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering LkeNodePool resources.
 */
export interface LkeNodePoolState {
    autoscaler?: pulumi.Input<inputs.LkeNodePoolAutoscaler>;
    /**
     * ID of the LKE Cluster where to create the current Node Pool.
     */
    clusterId?: pulumi.Input<number>;
    /**
     * The disk encryption policy for nodes in this pool.
     */
    diskEncryption?: pulumi.Input<string>;
    /**
     * The k8s version of the nodes in this node pool. For LKE enterprise only and may not currently available to all users even under v4beta.
     */
    k8sVersion?: pulumi.Input<string>;
    /**
     * A label for the Node Pool. If not provided, it defaults to empty string.
     */
    label?: pulumi.Input<string>;
    /**
     * A map attribute containing key-value pairs to be added as labels to nodes in the node pool. Labels help classify your nodes and to easily select subsets of objects. To learn more, review [Add Labels and Taints to your LKE Node Pools](https://www.linode.com/docs/products/compute/kubernetes/guides/deploy-and-manage-cluster-with-the-linode-api/#add-labels-and-taints-to-your-lke-node-pools).
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The number of nodes in the Node Pool. If undefined with an autoscaler the initial node count will equal the autoscaler minimum.
     */
    nodeCount?: pulumi.Input<number>;
    /**
     * A list of nodes in the node pool.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.LkeNodePoolNode>[]>;
    /**
     * An array of tags applied to the Node Pool. Tags can be used to flag node pools as externally managed, see Externally Managed Node Pools for more details.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Kubernetes taints to add to node pool nodes. Taints help control how pods are scheduled onto nodes, specifically allowing them to repel certain pods.
     */
    taints?: pulumi.Input<pulumi.Input<inputs.LkeNodePoolTaint>[]>;
    /**
     * A Linode Type for all nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
     */
    type?: pulumi.Input<string>;
    /**
     * The strategy for updating the node pool k8s version. For LKE enterprise only and may not currently available to all users even under v4beta.
     *
     * * `autoscaler` - (Optional) If defined, an autoscaler will be enabled with the given configuration.
     *
     * * `taint` - (Optional) Kubernetes taints to add to node pool nodes. Taints help control how pods are scheduled onto nodes, specifically allowing them to repel certain pods. To learn more, review [Add Labels and Taints to your LKE Node Pools](https://www.linode.com/docs/products/compute/kubernetes/guides/deploy-and-manage-cluster-with-the-linode-api/#add-labels-and-taints-to-your-lke-node-pools).
     */
    updateStrategy?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a LkeNodePool resource.
 */
export interface LkeNodePoolArgs {
    autoscaler?: pulumi.Input<inputs.LkeNodePoolAutoscaler>;
    /**
     * ID of the LKE Cluster where to create the current Node Pool.
     */
    clusterId: pulumi.Input<number>;
    /**
     * The k8s version of the nodes in this node pool. For LKE enterprise only and may not currently available to all users even under v4beta.
     */
    k8sVersion?: pulumi.Input<string>;
    /**
     * A label for the Node Pool. If not provided, it defaults to empty string.
     */
    label?: pulumi.Input<string>;
    /**
     * A map attribute containing key-value pairs to be added as labels to nodes in the node pool. Labels help classify your nodes and to easily select subsets of objects. To learn more, review [Add Labels and Taints to your LKE Node Pools](https://www.linode.com/docs/products/compute/kubernetes/guides/deploy-and-manage-cluster-with-the-linode-api/#add-labels-and-taints-to-your-lke-node-pools).
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The number of nodes in the Node Pool. If undefined with an autoscaler the initial node count will equal the autoscaler minimum.
     */
    nodeCount?: pulumi.Input<number>;
    /**
     * An array of tags applied to the Node Pool. Tags can be used to flag node pools as externally managed, see Externally Managed Node Pools for more details.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Kubernetes taints to add to node pool nodes. Taints help control how pods are scheduled onto nodes, specifically allowing them to repel certain pods.
     */
    taints?: pulumi.Input<pulumi.Input<inputs.LkeNodePoolTaint>[]>;
    /**
     * A Linode Type for all nodes in the Node Pool. See all node types [here](https://api.linode.com/v4/linode/types).
     */
    type: pulumi.Input<string>;
    /**
     * The strategy for updating the node pool k8s version. For LKE enterprise only and may not currently available to all users even under v4beta.
     *
     * * `autoscaler` - (Optional) If defined, an autoscaler will be enabled with the given configuration.
     *
     * * `taint` - (Optional) Kubernetes taints to add to node pool nodes. Taints help control how pods are scheduled onto nodes, specifically allowing them to repel certain pods. To learn more, review [Add Labels and Taints to your LKE Node Pools](https://www.linode.com/docs/products/compute/kubernetes/guides/deploy-and-manage-cluster-with-the-linode-api/#add-labels-and-taints-to-your-lke-node-pools).
     */
    updateStrategy?: pulumi.Input<string>;
}
