"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getKernelsOutput = exports.getKernels = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about Linode Kernels that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-kernels).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a Linode Kernel.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filteredKernels = linode.getKernels({
 *     filters: [
 *         {
 *             name: "label",
 *             values: ["my-kernel"],
 *         },
 *         {
 *             name: "architecture",
 *             values: ["x86_64"],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Filterable Fields
 *
 * * `id`
 *
 * * `architecture`
 *
 * * `deprecated`
 *
 * * `kvm`
 *
 * * `label`
 *
 * * `pvops`
 *
 * * `version`
 *
 * * `xen`
 */
function getKernels(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getKernels:getKernels", {
        "filters": args.filters,
        "kernels": args.kernels,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getKernels = getKernels;
/**
 * Provides information about Linode Kernels that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-kernels).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a Linode Kernel.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filteredKernels = linode.getKernels({
 *     filters: [
 *         {
 *             name: "label",
 *             values: ["my-kernel"],
 *         },
 *         {
 *             name: "architecture",
 *             values: ["x86_64"],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Filterable Fields
 *
 * * `id`
 *
 * * `architecture`
 *
 * * `deprecated`
 *
 * * `kvm`
 *
 * * `label`
 *
 * * `pvops`
 *
 * * `version`
 *
 * * `xen`
 */
function getKernelsOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getKernels:getKernels", {
        "filters": args.filters,
        "kernels": args.kernels,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getKernelsOutput = getKernelsOutput;
//# sourceMappingURL=getKernels.js.map