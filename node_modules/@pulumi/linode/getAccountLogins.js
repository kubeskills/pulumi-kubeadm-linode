"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAccountLoginsOutput = exports.getAccountLogins = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about Linode account logins that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-account-logins).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a Linode account login.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered_account_logins = linode.getAccountLogins({
 *     filters: [
 *         {
 *             name: "restricted",
 *             values: ["true"],
 *         },
 *         {
 *             name: "username",
 *             values: ["myUsername"],
 *         },
 *     ],
 * });
 * export const loginIds = filtered_account_logins.then(filtered_account_logins => filtered_account_logins.logins.map(__item => __item.id));
 * ```
 *
 * ## Filterable Fields
 *
 * * `ip`
 *
 * * `restricted`
 *
 * * `username`
 */
function getAccountLogins(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getAccountLogins:getAccountLogins", {
        "filters": args.filters,
        "logins": args.logins,
    }, opts);
}
exports.getAccountLogins = getAccountLogins;
/**
 * Provides information about Linode account logins that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-account-logins).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a Linode account login.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered_account_logins = linode.getAccountLogins({
 *     filters: [
 *         {
 *             name: "restricted",
 *             values: ["true"],
 *         },
 *         {
 *             name: "username",
 *             values: ["myUsername"],
 *         },
 *     ],
 * });
 * export const loginIds = filtered_account_logins.then(filtered_account_logins => filtered_account_logins.logins.map(__item => __item.id));
 * ```
 *
 * ## Filterable Fields
 *
 * * `ip`
 *
 * * `restricted`
 *
 * * `username`
 */
function getAccountLoginsOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getAccountLogins:getAccountLogins", {
        "filters": args.filters,
        "logins": args.logins,
    }, opts);
}
exports.getAccountLoginsOutput = getAccountLoginsOutput;
//# sourceMappingURL=getAccountLogins.js.map