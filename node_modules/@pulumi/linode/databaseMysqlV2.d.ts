import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides a Linode MySQL Database resource. This can be used to create, modify, and delete Linode MySQL Databases.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/post-databases-mysql-instances).
 *
 * Please keep in mind that Managed Databases can take up to half an hour to provision.
 *
 * ## Example Usage
 *
 * Creating a simple MySQL database that does not allow connections:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const foobar = new linode.DatabaseMysqlV2("foobar", {
 *     label: "mydatabase",
 *     engineId: "mysql/8",
 *     region: "us-mia",
 *     type: "g6-nanode-1",
 * });
 * ```
 *
 * Creating a simple MySQL database that allows connections from all IPv4 addresses:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const foobar = new linode.DatabaseMysqlV2("foobar", {
 *     label: "mydatabase",
 *     engineId: "mysql/8",
 *     region: "us-mia",
 *     type: "g6-nanode-1",
 *     allowLists: ["0.0.0.0/0"],
 * });
 * ```
 *
 * Creating a complex MySQL database:
 *
 * ## Import
 *
 * Linode MySQL Databases can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import linode:index/databaseMysqlV2:DatabaseMysqlV2 foobar 1234567
 * ```
 */
export declare class DatabaseMysqlV2 extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseMysqlV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseMysqlV2State, opts?: pulumi.CustomResourceOptions): DatabaseMysqlV2;
    /**
     * Returns true if the given object is an instance of DatabaseMysqlV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DatabaseMysqlV2;
    /**
     * A list of IP addresses that can access the Managed Database. Each item can be a single IP address or a range in CIDR format. Use `linode.DatabaseAccessControls` to manage your allow list separately.
     */
    readonly allowLists: pulumi.Output<string[]>;
    /**
     * The base64-encoded SSL CA certificate for the Managed Database.
     */
    readonly caCert: pulumi.Output<string>;
    /**
     * The number of Linode Instance nodes deployed to the Managed Database. (default `1`)
     */
    readonly clusterSize: pulumi.Output<number>;
    /**
     * When this Managed Database was created.
     */
    readonly created: pulumi.Output<string>;
    /**
     * Whether the Managed Databases is encrypted.
     */
    readonly encrypted: pulumi.Output<boolean>;
    /**
     * The Managed Database engine. (e.g. `mysql`)
     */
    readonly engine: pulumi.Output<string>;
    /**
     * The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default, for example if using the MySQL Debezium Kafka connector.
     */
    readonly engineConfigBinlogRetentionPeriod: pulumi.Output<number>;
    /**
     * The number of seconds that the mysqld server waits for a connect packet before responding with "Bad handshake".
     */
    readonly engineConfigMysqlConnectTimeout: pulumi.Output<number>;
    /**
     * Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or `SYSTEM` to use the MySQL server default.
     */
    readonly engineConfigMysqlDefaultTimeZone: pulumi.Output<string>;
    /**
     * The maximum permitted result length in bytes for the `GROUP_CONCAT()` function.
     */
    readonly engineConfigMysqlGroupConcatMaxLen: pulumi.Output<number>;
    /**
     * The time, in seconds, before cached statistics expire.
     */
    readonly engineConfigMysqlInformationSchemaStatsExpiry: pulumi.Output<number>;
    /**
     * Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25.
     */
    readonly engineConfigMysqlInnodbChangeBufferMaxSize: pulumi.Output<number>;
    /**
     * Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent.
     */
    readonly engineConfigMysqlInnodbFlushNeighbors: pulumi.Output<number>;
    /**
     * Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.
     */
    readonly engineConfigMysqlInnodbFtMinTokenSize: pulumi.Output<number>;
    /**
     * This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables. This field is nullable.
     */
    readonly engineConfigMysqlInnodbFtServerStopwordTable: pulumi.Output<string | undefined>;
    /**
     * The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.
     */
    readonly engineConfigMysqlInnodbLockWaitTimeout: pulumi.Output<number>;
    /**
     * The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
     */
    readonly engineConfigMysqlInnodbLogBufferSize: pulumi.Output<number>;
    /**
     * The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
     */
    readonly engineConfigMysqlInnodbOnlineAlterLogMaxSize: pulumi.Output<number>;
    /**
     * The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
     */
    readonly engineConfigMysqlInnodbReadIoThreads: pulumi.Output<number>;
    /**
     * When enabled, a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.
     */
    readonly engineConfigMysqlInnodbRollbackOnTimeout: pulumi.Output<boolean>;
    /**
     * Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit).
     */
    readonly engineConfigMysqlInnodbThreadConcurrency: pulumi.Output<number>;
    /**
     * The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
     */
    readonly engineConfigMysqlInnodbWriteIoThreads: pulumi.Output<number>;
    /**
     * The number of seconds the server waits for activity on an interactive connection before closing it.
     */
    readonly engineConfigMysqlInteractiveTimeout: pulumi.Output<number>;
    /**
     * The storage engine for in-memory internal temporary tables.
     */
    readonly engineConfigMysqlInternalTmpMemStorageEngine: pulumi.Output<string>;
    /**
     * Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M).
     */
    readonly engineConfigMysqlMaxAllowedPacket: pulumi.Output<number>;
    /**
     * Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M).
     */
    readonly engineConfigMysqlMaxHeapTableSize: pulumi.Output<number>;
    /**
     * Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.
     */
    readonly engineConfigMysqlNetBufferLength: pulumi.Output<number>;
    /**
     * The number of seconds to wait for more data from a connection before aborting the read.
     */
    readonly engineConfigMysqlNetReadTimeout: pulumi.Output<number>;
    /**
     * The number of seconds to wait for a block to be written to a connection before aborting the write.
     */
    readonly engineConfigMysqlNetWriteTimeout: pulumi.Output<number>;
    /**
     * Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K).
     */
    readonly engineConfigMysqlSortBufferSize: pulumi.Output<number>;
    /**
     * Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned. (default `ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES`)
     */
    readonly engineConfigMysqlSqlMode: pulumi.Output<string>;
    /**
     * Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them. (default `true`)
     */
    readonly engineConfigMysqlSqlRequirePrimaryKey: pulumi.Output<boolean>;
    /**
     * Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M).
     */
    readonly engineConfigMysqlTmpTableSize: pulumi.Output<number>;
    /**
     * The number of seconds the server waits for activity on a noninteractive connection before closing it.
     */
    readonly engineConfigMysqlWaitTimeout: pulumi.Output<number>;
    /**
     * The Managed Database engine in engine/version format. (e.g. `mysql`)
     */
    readonly engineId: pulumi.Output<string>;
    /**
     * The database timestamp from which it was restored.
     */
    readonly forkRestoreTime: pulumi.Output<string>;
    /**
     * The ID of the database that was forked from.
     *
     * * `privateNetwork` - (Optional) Restricts access to this database using a virtual private cloud (VPC) that you've configured in the region where the database will live.
     *
     * * `updates` - (Optional) Configuration settings for automated patch update maintenance for the Managed Database.
     */
    readonly forkSource: pulumi.Output<number | undefined>;
    /**
     * The primary host for the Managed Database.
     */
    readonly hostPrimary: pulumi.Output<string>;
    /**
     * The secondary/private host for the managed database.
     */
    readonly hostSecondary: pulumi.Output<string>;
    /**
     * A unique, user-defined string referring to the Managed Database.
     */
    readonly label: pulumi.Output<string>;
    /**
     * A mapping between IP addresses and strings designating them as primary or failover.
     */
    readonly members: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The oldest time to which a database can be restored.
     */
    readonly oldestRestoreTime: pulumi.Output<string>;
    /**
     * A set of pending updates.
     */
    readonly pendingUpdates: pulumi.Output<outputs.DatabaseMysqlV2PendingUpdate[]>;
    /**
     * The back-end platform for relational databases used by the service.
     */
    readonly platform: pulumi.Output<string>;
    /**
     * The access port for this Managed Database.
     */
    readonly port: pulumi.Output<number>;
    /**
     * Restricts access to this database using a virtual private cloud (VPC) that you've configured in the region where the database will live.
     */
    readonly privateNetwork: pulumi.Output<outputs.DatabaseMysqlV2PrivateNetwork | undefined>;
    /**
     * The region to use for the Managed Database.
     */
    readonly region: pulumi.Output<string>;
    /**
     * The randomly-generated root password for the Managed Database instance.
     */
    readonly rootPassword: pulumi.Output<string>;
    /**
     * The root username for the Managed Database instance.
     */
    readonly rootUsername: pulumi.Output<string>;
    /**
     * Whether to require SSL credentials to establish a connection to the Managed Database.
     */
    readonly sslConnection: pulumi.Output<boolean>;
    /**
     * The operating status of the Managed Database.
     */
    readonly status: pulumi.Output<string>;
    /**
     * Whether this Managed Database should be suspended.
     */
    readonly suspended: pulumi.Output<boolean>;
    readonly timeouts: pulumi.Output<outputs.DatabaseMysqlV2Timeouts | undefined>;
    /**
     * The Linode Instance type used for the nodes of the Managed Database.
     *
     * - - -
     */
    readonly type: pulumi.Output<string>;
    /**
     * When this Managed Database was last updated.
     */
    readonly updated: pulumi.Output<string>;
    /**
     * Configuration settings for automated patch update maintenance for the Managed Database.
     */
    readonly updates: pulumi.Output<outputs.DatabaseMysqlV2Updates>;
    /**
     * The Managed Database engine version. (e.g. `13.2`)
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a DatabaseMysqlV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseMysqlV2Args, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DatabaseMysqlV2 resources.
 */
export interface DatabaseMysqlV2State {
    /**
     * A list of IP addresses that can access the Managed Database. Each item can be a single IP address or a range in CIDR format. Use `linode.DatabaseAccessControls` to manage your allow list separately.
     */
    allowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The base64-encoded SSL CA certificate for the Managed Database.
     */
    caCert?: pulumi.Input<string>;
    /**
     * The number of Linode Instance nodes deployed to the Managed Database. (default `1`)
     */
    clusterSize?: pulumi.Input<number>;
    /**
     * When this Managed Database was created.
     */
    created?: pulumi.Input<string>;
    /**
     * Whether the Managed Databases is encrypted.
     */
    encrypted?: pulumi.Input<boolean>;
    /**
     * The Managed Database engine. (e.g. `mysql`)
     */
    engine?: pulumi.Input<string>;
    /**
     * The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default, for example if using the MySQL Debezium Kafka connector.
     */
    engineConfigBinlogRetentionPeriod?: pulumi.Input<number>;
    /**
     * The number of seconds that the mysqld server waits for a connect packet before responding with "Bad handshake".
     */
    engineConfigMysqlConnectTimeout?: pulumi.Input<number>;
    /**
     * Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or `SYSTEM` to use the MySQL server default.
     */
    engineConfigMysqlDefaultTimeZone?: pulumi.Input<string>;
    /**
     * The maximum permitted result length in bytes for the `GROUP_CONCAT()` function.
     */
    engineConfigMysqlGroupConcatMaxLen?: pulumi.Input<number>;
    /**
     * The time, in seconds, before cached statistics expire.
     */
    engineConfigMysqlInformationSchemaStatsExpiry?: pulumi.Input<number>;
    /**
     * Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25.
     */
    engineConfigMysqlInnodbChangeBufferMaxSize?: pulumi.Input<number>;
    /**
     * Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent.
     */
    engineConfigMysqlInnodbFlushNeighbors?: pulumi.Input<number>;
    /**
     * Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.
     */
    engineConfigMysqlInnodbFtMinTokenSize?: pulumi.Input<number>;
    /**
     * This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables. This field is nullable.
     */
    engineConfigMysqlInnodbFtServerStopwordTable?: pulumi.Input<string>;
    /**
     * The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.
     */
    engineConfigMysqlInnodbLockWaitTimeout?: pulumi.Input<number>;
    /**
     * The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
     */
    engineConfigMysqlInnodbLogBufferSize?: pulumi.Input<number>;
    /**
     * The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
     */
    engineConfigMysqlInnodbOnlineAlterLogMaxSize?: pulumi.Input<number>;
    /**
     * The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
     */
    engineConfigMysqlInnodbReadIoThreads?: pulumi.Input<number>;
    /**
     * When enabled, a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.
     */
    engineConfigMysqlInnodbRollbackOnTimeout?: pulumi.Input<boolean>;
    /**
     * Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit).
     */
    engineConfigMysqlInnodbThreadConcurrency?: pulumi.Input<number>;
    /**
     * The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
     */
    engineConfigMysqlInnodbWriteIoThreads?: pulumi.Input<number>;
    /**
     * The number of seconds the server waits for activity on an interactive connection before closing it.
     */
    engineConfigMysqlInteractiveTimeout?: pulumi.Input<number>;
    /**
     * The storage engine for in-memory internal temporary tables.
     */
    engineConfigMysqlInternalTmpMemStorageEngine?: pulumi.Input<string>;
    /**
     * Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M).
     */
    engineConfigMysqlMaxAllowedPacket?: pulumi.Input<number>;
    /**
     * Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M).
     */
    engineConfigMysqlMaxHeapTableSize?: pulumi.Input<number>;
    /**
     * Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.
     */
    engineConfigMysqlNetBufferLength?: pulumi.Input<number>;
    /**
     * The number of seconds to wait for more data from a connection before aborting the read.
     */
    engineConfigMysqlNetReadTimeout?: pulumi.Input<number>;
    /**
     * The number of seconds to wait for a block to be written to a connection before aborting the write.
     */
    engineConfigMysqlNetWriteTimeout?: pulumi.Input<number>;
    /**
     * Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K).
     */
    engineConfigMysqlSortBufferSize?: pulumi.Input<number>;
    /**
     * Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned. (default `ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES`)
     */
    engineConfigMysqlSqlMode?: pulumi.Input<string>;
    /**
     * Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them. (default `true`)
     */
    engineConfigMysqlSqlRequirePrimaryKey?: pulumi.Input<boolean>;
    /**
     * Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M).
     */
    engineConfigMysqlTmpTableSize?: pulumi.Input<number>;
    /**
     * The number of seconds the server waits for activity on a noninteractive connection before closing it.
     */
    engineConfigMysqlWaitTimeout?: pulumi.Input<number>;
    /**
     * The Managed Database engine in engine/version format. (e.g. `mysql`)
     */
    engineId?: pulumi.Input<string>;
    /**
     * The database timestamp from which it was restored.
     */
    forkRestoreTime?: pulumi.Input<string>;
    /**
     * The ID of the database that was forked from.
     *
     * * `privateNetwork` - (Optional) Restricts access to this database using a virtual private cloud (VPC) that you've configured in the region where the database will live.
     *
     * * `updates` - (Optional) Configuration settings for automated patch update maintenance for the Managed Database.
     */
    forkSource?: pulumi.Input<number>;
    /**
     * The primary host for the Managed Database.
     */
    hostPrimary?: pulumi.Input<string>;
    /**
     * The secondary/private host for the managed database.
     */
    hostSecondary?: pulumi.Input<string>;
    /**
     * A unique, user-defined string referring to the Managed Database.
     */
    label?: pulumi.Input<string>;
    /**
     * A mapping between IP addresses and strings designating them as primary or failover.
     */
    members?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The oldest time to which a database can be restored.
     */
    oldestRestoreTime?: pulumi.Input<string>;
    /**
     * A set of pending updates.
     */
    pendingUpdates?: pulumi.Input<pulumi.Input<inputs.DatabaseMysqlV2PendingUpdate>[]>;
    /**
     * The back-end platform for relational databases used by the service.
     */
    platform?: pulumi.Input<string>;
    /**
     * The access port for this Managed Database.
     */
    port?: pulumi.Input<number>;
    /**
     * Restricts access to this database using a virtual private cloud (VPC) that you've configured in the region where the database will live.
     */
    privateNetwork?: pulumi.Input<inputs.DatabaseMysqlV2PrivateNetwork>;
    /**
     * The region to use for the Managed Database.
     */
    region?: pulumi.Input<string>;
    /**
     * The randomly-generated root password for the Managed Database instance.
     */
    rootPassword?: pulumi.Input<string>;
    /**
     * The root username for the Managed Database instance.
     */
    rootUsername?: pulumi.Input<string>;
    /**
     * Whether to require SSL credentials to establish a connection to the Managed Database.
     */
    sslConnection?: pulumi.Input<boolean>;
    /**
     * The operating status of the Managed Database.
     */
    status?: pulumi.Input<string>;
    /**
     * Whether this Managed Database should be suspended.
     */
    suspended?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.DatabaseMysqlV2Timeouts>;
    /**
     * The Linode Instance type used for the nodes of the Managed Database.
     *
     * - - -
     */
    type?: pulumi.Input<string>;
    /**
     * When this Managed Database was last updated.
     */
    updated?: pulumi.Input<string>;
    /**
     * Configuration settings for automated patch update maintenance for the Managed Database.
     */
    updates?: pulumi.Input<inputs.DatabaseMysqlV2Updates>;
    /**
     * The Managed Database engine version. (e.g. `13.2`)
     */
    version?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DatabaseMysqlV2 resource.
 */
export interface DatabaseMysqlV2Args {
    /**
     * A list of IP addresses that can access the Managed Database. Each item can be a single IP address or a range in CIDR format. Use `linode.DatabaseAccessControls` to manage your allow list separately.
     */
    allowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The number of Linode Instance nodes deployed to the Managed Database. (default `1`)
     */
    clusterSize?: pulumi.Input<number>;
    /**
     * The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default, for example if using the MySQL Debezium Kafka connector.
     */
    engineConfigBinlogRetentionPeriod?: pulumi.Input<number>;
    /**
     * The number of seconds that the mysqld server waits for a connect packet before responding with "Bad handshake".
     */
    engineConfigMysqlConnectTimeout?: pulumi.Input<number>;
    /**
     * Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or `SYSTEM` to use the MySQL server default.
     */
    engineConfigMysqlDefaultTimeZone?: pulumi.Input<string>;
    /**
     * The maximum permitted result length in bytes for the `GROUP_CONCAT()` function.
     */
    engineConfigMysqlGroupConcatMaxLen?: pulumi.Input<number>;
    /**
     * The time, in seconds, before cached statistics expire.
     */
    engineConfigMysqlInformationSchemaStatsExpiry?: pulumi.Input<number>;
    /**
     * Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25.
     */
    engineConfigMysqlInnodbChangeBufferMaxSize?: pulumi.Input<number>;
    /**
     * Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent.
     */
    engineConfigMysqlInnodbFlushNeighbors?: pulumi.Input<number>;
    /**
     * Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.
     */
    engineConfigMysqlInnodbFtMinTokenSize?: pulumi.Input<number>;
    /**
     * This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables. This field is nullable.
     */
    engineConfigMysqlInnodbFtServerStopwordTable?: pulumi.Input<string>;
    /**
     * The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.
     */
    engineConfigMysqlInnodbLockWaitTimeout?: pulumi.Input<number>;
    /**
     * The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
     */
    engineConfigMysqlInnodbLogBufferSize?: pulumi.Input<number>;
    /**
     * The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
     */
    engineConfigMysqlInnodbOnlineAlterLogMaxSize?: pulumi.Input<number>;
    /**
     * The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
     */
    engineConfigMysqlInnodbReadIoThreads?: pulumi.Input<number>;
    /**
     * When enabled, a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.
     */
    engineConfigMysqlInnodbRollbackOnTimeout?: pulumi.Input<boolean>;
    /**
     * Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit).
     */
    engineConfigMysqlInnodbThreadConcurrency?: pulumi.Input<number>;
    /**
     * The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
     */
    engineConfigMysqlInnodbWriteIoThreads?: pulumi.Input<number>;
    /**
     * The number of seconds the server waits for activity on an interactive connection before closing it.
     */
    engineConfigMysqlInteractiveTimeout?: pulumi.Input<number>;
    /**
     * The storage engine for in-memory internal temporary tables.
     */
    engineConfigMysqlInternalTmpMemStorageEngine?: pulumi.Input<string>;
    /**
     * Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M).
     */
    engineConfigMysqlMaxAllowedPacket?: pulumi.Input<number>;
    /**
     * Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M).
     */
    engineConfigMysqlMaxHeapTableSize?: pulumi.Input<number>;
    /**
     * Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.
     */
    engineConfigMysqlNetBufferLength?: pulumi.Input<number>;
    /**
     * The number of seconds to wait for more data from a connection before aborting the read.
     */
    engineConfigMysqlNetReadTimeout?: pulumi.Input<number>;
    /**
     * The number of seconds to wait for a block to be written to a connection before aborting the write.
     */
    engineConfigMysqlNetWriteTimeout?: pulumi.Input<number>;
    /**
     * Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K).
     */
    engineConfigMysqlSortBufferSize?: pulumi.Input<number>;
    /**
     * Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned. (default `ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES`)
     */
    engineConfigMysqlSqlMode?: pulumi.Input<string>;
    /**
     * Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them. (default `true`)
     */
    engineConfigMysqlSqlRequirePrimaryKey?: pulumi.Input<boolean>;
    /**
     * Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M).
     */
    engineConfigMysqlTmpTableSize?: pulumi.Input<number>;
    /**
     * The number of seconds the server waits for activity on a noninteractive connection before closing it.
     */
    engineConfigMysqlWaitTimeout?: pulumi.Input<number>;
    /**
     * The Managed Database engine in engine/version format. (e.g. `mysql`)
     */
    engineId: pulumi.Input<string>;
    /**
     * The database timestamp from which it was restored.
     */
    forkRestoreTime?: pulumi.Input<string>;
    /**
     * The ID of the database that was forked from.
     *
     * * `privateNetwork` - (Optional) Restricts access to this database using a virtual private cloud (VPC) that you've configured in the region where the database will live.
     *
     * * `updates` - (Optional) Configuration settings for automated patch update maintenance for the Managed Database.
     */
    forkSource?: pulumi.Input<number>;
    /**
     * A unique, user-defined string referring to the Managed Database.
     */
    label: pulumi.Input<string>;
    /**
     * Restricts access to this database using a virtual private cloud (VPC) that you've configured in the region where the database will live.
     */
    privateNetwork?: pulumi.Input<inputs.DatabaseMysqlV2PrivateNetwork>;
    /**
     * The region to use for the Managed Database.
     */
    region: pulumi.Input<string>;
    /**
     * Whether this Managed Database should be suspended.
     */
    suspended?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.DatabaseMysqlV2Timeouts>;
    /**
     * The Linode Instance type used for the nodes of the Managed Database.
     *
     * - - -
     */
    type: pulumi.Input<string>;
    /**
     * Configuration settings for automated patch update maintenance for the Managed Database.
     */
    updates?: pulumi.Input<inputs.DatabaseMysqlV2Updates>;
}
