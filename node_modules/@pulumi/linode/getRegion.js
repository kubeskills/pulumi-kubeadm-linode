"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRegionOutput = exports.getRegion = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * `linode.getRegion` provides details about a specific Linode region. See all regions [here](https://api.linode.com/v4/regions).
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-region).
 *
 * ## Example Usage
 *
 * The following example shows how the resource might be used to obtain additional information about a Linode region.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const region = linode.getRegion({
 *     id: "us-east",
 * });
 * ```
 */
function getRegion(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getRegion:getRegion", {
        "id": args.id,
        "resolvers": args.resolvers,
    }, opts);
}
exports.getRegion = getRegion;
/**
 * `linode.getRegion` provides details about a specific Linode region. See all regions [here](https://api.linode.com/v4/regions).
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-region).
 *
 * ## Example Usage
 *
 * The following example shows how the resource might be used to obtain additional information about a Linode region.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const region = linode.getRegion({
 *     id: "us-east",
 * });
 * ```
 */
function getRegionOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getRegion:getRegion", {
        "id": args.id,
        "resolvers": args.resolvers,
    }, opts);
}
exports.getRegionOutput = getRegionOutput;
//# sourceMappingURL=getRegion.js.map