"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLkeClustersOutput = exports.getLkeClusters = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about a list of current Linode Kubernetes (LKE) clusters on your account that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-lke-clusters).
 *
 * ## Example Usage
 *
 * Get information about all LKE clusters with a specific tag:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const specific = linode.getLkeClusters({
 *     filters: [{
 *         name: "tags",
 *         values: ["test-tag"],
 *     }],
 * });
 * export const lkeCluster = specific.then(specific => specific.lkeClusters?.[0]?.id);
 * ```
 *
 * ## Filterable Fields
 *
 * * `k8sVersion`
 *
 * * `label`
 *
 * * `region`
 *
 * * `tags`
 *
 * * `status`
 *
 * * `created`
 *
 * * `updated`
 */
function getLkeClusters(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getLkeClusters:getLkeClusters", {
        "filters": args.filters,
        "lkeClusters": args.lkeClusters,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getLkeClusters = getLkeClusters;
/**
 * Provides information about a list of current Linode Kubernetes (LKE) clusters on your account that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-lke-clusters).
 *
 * ## Example Usage
 *
 * Get information about all LKE clusters with a specific tag:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const specific = linode.getLkeClusters({
 *     filters: [{
 *         name: "tags",
 *         values: ["test-tag"],
 *     }],
 * });
 * export const lkeCluster = specific.then(specific => specific.lkeClusters?.[0]?.id);
 * ```
 *
 * ## Filterable Fields
 *
 * * `k8sVersion`
 *
 * * `label`
 *
 * * `region`
 *
 * * `tags`
 *
 * * `status`
 *
 * * `created`
 *
 * * `updated`
 */
function getLkeClustersOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getLkeClusters:getLkeClusters", {
        "filters": args.filters,
        "lkeClusters": args.lkeClusters,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getLkeClustersOutput = getLkeClustersOutput;
//# sourceMappingURL=getLkeClusters.js.map