"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNodebalancerConfigsOutput = exports.getNodebalancerConfigs = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about Linode NodeBalancer Configs that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-configs).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a list of NodeBalancer Configs.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filterNbConfigs = linode.getNodebalancerConfigs({
 *     nodebalancerId: 12345,
 *     filters: [{
 *         name: "port",
 *         values: ["80"],
 *     }],
 * });
 * export const nodebalancerConfigId = filterNbConfigs.then(filterNbConfigs => filterNbConfigs.nodebalancerConfigs?.[0]?.id);
 * ```
 *
 * ## Filterable Fields
 *
 * * `algorithm`
 *
 * * `check`
 *
 * * `nodebalancerId`
 *
 * * `port`
 *
 * * `protocol`
 *
 * * `proxyProtocol`
 *
 * * `stickiness`
 *
 * * `checkPath`
 *
 * * `checkBody`
 *
 * * `checkPassive`
 *
 * * `cipherSuite`
 *
 * * `sslCommonname`
 */
function getNodebalancerConfigs(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getNodebalancerConfigs:getNodebalancerConfigs", {
        "filters": args.filters,
        "nodebalancerConfigs": args.nodebalancerConfigs,
        "nodebalancerId": args.nodebalancerId,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getNodebalancerConfigs = getNodebalancerConfigs;
/**
 * Provides information about Linode NodeBalancer Configs that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-node-balancer-configs).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a list of NodeBalancer Configs.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filterNbConfigs = linode.getNodebalancerConfigs({
 *     nodebalancerId: 12345,
 *     filters: [{
 *         name: "port",
 *         values: ["80"],
 *     }],
 * });
 * export const nodebalancerConfigId = filterNbConfigs.then(filterNbConfigs => filterNbConfigs.nodebalancerConfigs?.[0]?.id);
 * ```
 *
 * ## Filterable Fields
 *
 * * `algorithm`
 *
 * * `check`
 *
 * * `nodebalancerId`
 *
 * * `port`
 *
 * * `protocol`
 *
 * * `proxyProtocol`
 *
 * * `stickiness`
 *
 * * `checkPath`
 *
 * * `checkBody`
 *
 * * `checkPassive`
 *
 * * `cipherSuite`
 *
 * * `sslCommonname`
 */
function getNodebalancerConfigsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getNodebalancerConfigs:getNodebalancerConfigs", {
        "filters": args.filters,
        "nodebalancerConfigs": args.nodebalancerConfigs,
        "nodebalancerId": args.nodebalancerId,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getNodebalancerConfigsOutput = getNodebalancerConfigsOutput;
//# sourceMappingURL=getNodebalancerConfigs.js.map