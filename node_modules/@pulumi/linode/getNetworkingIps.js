"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNetworkingIpsOutput = exports.getNetworkingIps = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about all IP addresses associated with the current Linode account, including both assigned and unassigned reserved IP addresses.
 *
 * ## Example Usage
 *
 * Retrieve all IPs under the current account:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const all = linode.getNetworkingIps({});
 * ```
 *
 * Retrieve all IPs under the current account in a specific region:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered = linode.getNetworkingIps({
 *     filters: [{
 *         name: "region",
 *         values: ["us-mia"],
 *     }],
 * });
 * ```
 *
 * ## Filterable Fields
 *
 * * `address`
 *
 * * `gateway`
 *
 * * `subnetMask`
 *
 * * `prefix`
 *
 * * `type`
 *
 * * `public`
 *
 * * `rdns`
 *
 * * `linodeId`
 *
 * * `region`
 *
 * * `reserved`
 */
function getNetworkingIps(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getNetworkingIps:getNetworkingIps", {
        "filters": args.filters,
        "ipAddresses": args.ipAddresses,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getNetworkingIps = getNetworkingIps;
/**
 * Provides information about all IP addresses associated with the current Linode account, including both assigned and unassigned reserved IP addresses.
 *
 * ## Example Usage
 *
 * Retrieve all IPs under the current account:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const all = linode.getNetworkingIps({});
 * ```
 *
 * Retrieve all IPs under the current account in a specific region:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered = linode.getNetworkingIps({
 *     filters: [{
 *         name: "region",
 *         values: ["us-mia"],
 *     }],
 * });
 * ```
 *
 * ## Filterable Fields
 *
 * * `address`
 *
 * * `gateway`
 *
 * * `subnetMask`
 *
 * * `prefix`
 *
 * * `type`
 *
 * * `public`
 *
 * * `rdns`
 *
 * * `linodeId`
 *
 * * `region`
 *
 * * `reserved`
 */
function getNetworkingIpsOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getNetworkingIps:getNetworkingIps", {
        "filters": args.filters,
        "ipAddresses": args.ipAddresses,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getNetworkingIpsOutput = getNetworkingIpsOutput;
//# sourceMappingURL=getNetworkingIps.js.map