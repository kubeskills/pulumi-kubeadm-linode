import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
export declare class ReservedIpAssignment extends pulumi.CustomResource {
    /**
     * Get an existing ReservedIpAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReservedIpAssignmentState, opts?: pulumi.CustomResourceOptions): ReservedIpAssignment;
    /**
     * Returns true if the given object is an instance of ReservedIpAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ReservedIpAssignment;
    /**
     * The resulting IPv4 address.
     */
    readonly address: pulumi.Output<string>;
    /**
     * If true, the instance will be rebooted to update network interfaces. This functionality is not affected by the `skipImplicitReboots` provider argument.
     */
    readonly applyImmediately: pulumi.Output<boolean>;
    /**
     * The default gateway for this address
     */
    readonly gateway: pulumi.Output<string>;
    /**
     * The ID of the Linode to allocate an IPv4 address for.
     */
    readonly linodeId: pulumi.Output<number>;
    /**
     * The number of bits set in the subnet mask.
     */
    readonly prefix: pulumi.Output<number>;
    /**
     * Whether the IPv4 address is public or private.
     */
    readonly public: pulumi.Output<boolean>;
    /**
     * The reverse DNS assigned to this address.
     */
    readonly rdns: pulumi.Output<string>;
    /**
     * The region this IP resides in.
     */
    readonly region: pulumi.Output<string>;
    /**
     * The reservation status of the IP address
     */
    readonly reserved: pulumi.Output<boolean>;
    /**
     * The mask that separates host bits from network bits for this address.
     */
    readonly subnetMask: pulumi.Output<string>;
    /**
     * The type of IP address.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Contains information about the NAT 1:1 mapping of a public IP address to a VPC subnet.
     */
    readonly vpcNat11s: pulumi.Output<outputs.ReservedIpAssignmentVpcNat11[]>;
    /**
     * Create a ReservedIpAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReservedIpAssignmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ReservedIpAssignment resources.
 */
export interface ReservedIpAssignmentState {
    /**
     * The resulting IPv4 address.
     */
    address?: pulumi.Input<string>;
    /**
     * If true, the instance will be rebooted to update network interfaces. This functionality is not affected by the `skipImplicitReboots` provider argument.
     */
    applyImmediately?: pulumi.Input<boolean>;
    /**
     * The default gateway for this address
     */
    gateway?: pulumi.Input<string>;
    /**
     * The ID of the Linode to allocate an IPv4 address for.
     */
    linodeId?: pulumi.Input<number>;
    /**
     * The number of bits set in the subnet mask.
     */
    prefix?: pulumi.Input<number>;
    /**
     * Whether the IPv4 address is public or private.
     */
    public?: pulumi.Input<boolean>;
    /**
     * The reverse DNS assigned to this address.
     */
    rdns?: pulumi.Input<string>;
    /**
     * The region this IP resides in.
     */
    region?: pulumi.Input<string>;
    /**
     * The reservation status of the IP address
     */
    reserved?: pulumi.Input<boolean>;
    /**
     * The mask that separates host bits from network bits for this address.
     */
    subnetMask?: pulumi.Input<string>;
    /**
     * The type of IP address.
     */
    type?: pulumi.Input<string>;
    /**
     * Contains information about the NAT 1:1 mapping of a public IP address to a VPC subnet.
     */
    vpcNat11s?: pulumi.Input<pulumi.Input<inputs.ReservedIpAssignmentVpcNat11>[]>;
}
/**
 * The set of arguments for constructing a ReservedIpAssignment resource.
 */
export interface ReservedIpAssignmentArgs {
    /**
     * The resulting IPv4 address.
     */
    address: pulumi.Input<string>;
    /**
     * If true, the instance will be rebooted to update network interfaces. This functionality is not affected by the `skipImplicitReboots` provider argument.
     */
    applyImmediately?: pulumi.Input<boolean>;
    /**
     * The ID of the Linode to allocate an IPv4 address for.
     */
    linodeId: pulumi.Input<number>;
    /**
     * Whether the IPv4 address is public or private.
     */
    public?: pulumi.Input<boolean>;
    /**
     * The reverse DNS assigned to this address.
     */
    rdns?: pulumi.Input<string>;
}
