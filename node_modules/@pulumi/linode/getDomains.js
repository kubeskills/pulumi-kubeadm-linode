"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDomainsOutput = exports.getDomains = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about Linode Domains that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-domains).
 *
 * ## Example Usage
 *
 * Get information about all Linode Cloud Domains with a specific tag:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const specific = linode.getDomains({
 *     filters: [{
 *         name: "tags",
 *         values: ["test-tag"],
 *     }],
 * });
 * export const domain = specific.then(specific => specific.domains?.[0]?.domain);
 * ```
 *
 * ## Filterable Fields
 *
 * * `group`
 *
 * * `tags`
 *
 * * `domain`
 *
 * * `type`
 *
 * * `status`
 *
 * * `description`
 *
 * * `masterIps`
 *
 * * `axfrIps`
 *
 * * `ttlSec`
 *
 * * `retrySec`
 *
 * * `expireSec`
 *
 * * `refreshSec`
 *
 * * `soaEmail`
 */
function getDomains(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getDomains:getDomains", {
        "domains": args.domains,
        "filters": args.filters,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getDomains = getDomains;
/**
 * Provides information about Linode Domains that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-domains).
 *
 * ## Example Usage
 *
 * Get information about all Linode Cloud Domains with a specific tag:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const specific = linode.getDomains({
 *     filters: [{
 *         name: "tags",
 *         values: ["test-tag"],
 *     }],
 * });
 * export const domain = specific.then(specific => specific.domains?.[0]?.domain);
 * ```
 *
 * ## Filterable Fields
 *
 * * `group`
 *
 * * `tags`
 *
 * * `domain`
 *
 * * `type`
 *
 * * `status`
 *
 * * `description`
 *
 * * `masterIps`
 *
 * * `axfrIps`
 *
 * * `ttlSec`
 *
 * * `retrySec`
 *
 * * `expireSec`
 *
 * * `refreshSec`
 *
 * * `soaEmail`
 */
function getDomainsOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getDomains:getDomains", {
        "domains": args.domains,
        "filters": args.filters,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getDomainsOutput = getDomainsOutput;
//# sourceMappingURL=getDomains.js.map