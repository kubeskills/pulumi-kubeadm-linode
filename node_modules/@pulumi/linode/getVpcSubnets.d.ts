import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides information about a list of Linode VPC subnets that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-vpc-subnets).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to list VPC subnets.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered_subnets = linode.getVpcSubnets({
 *     vpcId: 123,
 *     filters: [{
 *         name: "label",
 *         values: ["test"],
 *     }],
 * });
 * export const vpcSubnets = filtered_subnets.then(filtered_subnets => filtered_subnets.vpcSubnets);
 * ```
 *
 * ## IPv6
 *
 * > **Limited Availability** IPv6 VPCs may not currently be available to all users.
 *
 * The following attributes are exported under each entry of the `ipv6` field:
 *
 * * `range` - An IPv6 range allocated to this subnet in CIDR format.
 *
 * ## Filterable Fields
 *
 * * `id`
 *
 * * `label`
 *
 * * `ipv4`
 */
export declare function getVpcSubnets(args: GetVpcSubnetsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcSubnetsResult>;
/**
 * A collection of arguments for invoking getVpcSubnets.
 */
export interface GetVpcSubnetsArgs {
    filters?: inputs.GetVpcSubnetsFilter[];
    /**
     * The id of the parent VPC for the list of VPCs.
     *
     * * `filter` - (Optional) A set of filters used to select Linode VPC subnets that meet certain requirements.
     */
    vpcId: number;
    vpcSubnets?: inputs.GetVpcSubnetsVpcSubnet[];
}
/**
 * A collection of values returned by getVpcSubnets.
 */
export interface GetVpcSubnetsResult {
    readonly filters?: outputs.GetVpcSubnetsFilter[];
    /**
     * The unique id of the VPC subnet.
     */
    readonly id: string;
    readonly vpcId: number;
    readonly vpcSubnets?: outputs.GetVpcSubnetsVpcSubnet[];
}
/**
 * Provides information about a list of Linode VPC subnets that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-vpc-subnets).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to list VPC subnets.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const filtered_subnets = linode.getVpcSubnets({
 *     vpcId: 123,
 *     filters: [{
 *         name: "label",
 *         values: ["test"],
 *     }],
 * });
 * export const vpcSubnets = filtered_subnets.then(filtered_subnets => filtered_subnets.vpcSubnets);
 * ```
 *
 * ## IPv6
 *
 * > **Limited Availability** IPv6 VPCs may not currently be available to all users.
 *
 * The following attributes are exported under each entry of the `ipv6` field:
 *
 * * `range` - An IPv6 range allocated to this subnet in CIDR format.
 *
 * ## Filterable Fields
 *
 * * `id`
 *
 * * `label`
 *
 * * `ipv4`
 */
export declare function getVpcSubnetsOutput(args: GetVpcSubnetsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpcSubnetsResult>;
/**
 * A collection of arguments for invoking getVpcSubnets.
 */
export interface GetVpcSubnetsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetVpcSubnetsFilterArgs>[]>;
    /**
     * The id of the parent VPC for the list of VPCs.
     *
     * * `filter` - (Optional) A set of filters used to select Linode VPC subnets that meet certain requirements.
     */
    vpcId: pulumi.Input<number>;
    vpcSubnets?: pulumi.Input<pulumi.Input<inputs.GetVpcSubnetsVpcSubnetArgs>[]>;
}
