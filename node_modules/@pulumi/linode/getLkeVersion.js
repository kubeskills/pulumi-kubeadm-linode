"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLkeVersionOutput = exports.getLkeVersion = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides details about a specific Kubernetes versions available for deployment to a Kubernetes cluster.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-lke-version).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a Linode LKE Version.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const example = linode.getLkeVersion({
 *     id: "1.31",
 * });
 * ```
 *
 * The following example shows how one might use this data source to access information about a Linode LKE Version
 * with additional information about the Linode LKE Version's tier (`enterprise` or `standard`).
 *
 * > **_NOTE:_**  This functionality may not be currently available to all users and can only be used with v4beta.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const example = linode.getLkeVersion({
 *     id: "1.31",
 *     tier: "standard",
 * });
 * ```
 */
function getLkeVersion(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getLkeVersion:getLkeVersion", {
        "id": args.id,
        "tier": args.tier,
    }, opts);
}
exports.getLkeVersion = getLkeVersion;
/**
 * Provides details about a specific Kubernetes versions available for deployment to a Kubernetes cluster.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-lke-version).
 *
 * ## Example Usage
 *
 * The following example shows how one might use this data source to access information about a Linode LKE Version.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const example = linode.getLkeVersion({
 *     id: "1.31",
 * });
 * ```
 *
 * The following example shows how one might use this data source to access information about a Linode LKE Version
 * with additional information about the Linode LKE Version's tier (`enterprise` or `standard`).
 *
 * > **_NOTE:_**  This functionality may not be currently available to all users and can only be used with v4beta.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const example = linode.getLkeVersion({
 *     id: "1.31",
 *     tier: "standard",
 * });
 * ```
 */
function getLkeVersionOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getLkeVersion:getLkeVersion", {
        "id": args.id,
        "tier": args.tier,
    }, opts);
}
exports.getLkeVersionOutput = getLkeVersionOutput;
//# sourceMappingURL=getLkeVersion.js.map