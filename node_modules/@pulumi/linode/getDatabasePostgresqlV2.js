"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDatabasePostgresqlV2Output = exports.getDatabasePostgresqlV2 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about a Linode PostgreSQL Database.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-databases-postgre-sql-instance-backups).
 *
 * ## Example Usage
 *
 * Get information about a PostgreSQL database:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const my_db = linode.getDatabasePostgresqlV2({
 *     id: "12345",
 * });
 * ```
 *
 * ## pendingUpdates
 *
 * The following arguments are exposed by each entry in the `pendingUpdates` attribute:
 *
 * * `deadline` - The time when a mandatory update needs to be applied.
 *
 * * `description` - A description of the update.
 *
 * * `plannedFor` - The date and time a maintenance update will be applied.
 *
 * ## updates
 *
 * The following arguments are supported in the `updates` specification block:
 *
 * * `dayOfWeek` - The day to perform maintenance. (`monday`, `tuesday`, ...)
 *
 * * `duration` - The maximum maintenance window time in hours. (`1`..`3`)
 *
 * * `frequency` - The frequency at which maintenance occurs. (`weekly`)
 *
 * * `hourOfDay` - The hour to begin maintenance based in UTC time. (`0`..`23`)
 *
 * ## privateNetwork
 *
 * The following arguments are exposed by the `privateNetwork` attribute:
 *
 * * `vpcId` - The ID of the virtual private cloud (VPC) to restrict access to this database using.
 *
 * * `subnetId` - The ID of the VPC subnet to restrict access to this database using.
 *
 * * `publicAccess` - If true, clients outside the VPC can connect to the database using a public IP address.
 */
function getDatabasePostgresqlV2(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getDatabasePostgresqlV2:getDatabasePostgresqlV2", {
        "id": args.id,
    }, opts);
}
exports.getDatabasePostgresqlV2 = getDatabasePostgresqlV2;
/**
 * Provides information about a Linode PostgreSQL Database.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-databases-postgre-sql-instance-backups).
 *
 * ## Example Usage
 *
 * Get information about a PostgreSQL database:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const my_db = linode.getDatabasePostgresqlV2({
 *     id: "12345",
 * });
 * ```
 *
 * ## pendingUpdates
 *
 * The following arguments are exposed by each entry in the `pendingUpdates` attribute:
 *
 * * `deadline` - The time when a mandatory update needs to be applied.
 *
 * * `description` - A description of the update.
 *
 * * `plannedFor` - The date and time a maintenance update will be applied.
 *
 * ## updates
 *
 * The following arguments are supported in the `updates` specification block:
 *
 * * `dayOfWeek` - The day to perform maintenance. (`monday`, `tuesday`, ...)
 *
 * * `duration` - The maximum maintenance window time in hours. (`1`..`3`)
 *
 * * `frequency` - The frequency at which maintenance occurs. (`weekly`)
 *
 * * `hourOfDay` - The hour to begin maintenance based in UTC time. (`0`..`23`)
 *
 * ## privateNetwork
 *
 * The following arguments are exposed by the `privateNetwork` attribute:
 *
 * * `vpcId` - The ID of the virtual private cloud (VPC) to restrict access to this database using.
 *
 * * `subnetId` - The ID of the VPC subnet to restrict access to this database using.
 *
 * * `publicAccess` - If true, clients outside the VPC can connect to the database using a public IP address.
 */
function getDatabasePostgresqlV2Output(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getDatabasePostgresqlV2:getDatabasePostgresqlV2", {
        "id": args.id,
    }, opts);
}
exports.getDatabasePostgresqlV2Output = getDatabasePostgresqlV2Output;
//# sourceMappingURL=getDatabasePostgresqlV2.js.map