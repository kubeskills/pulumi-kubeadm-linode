"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDatabaseMysqlBackupsOutput = exports.getDatabaseMysqlBackups = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * > **DEPRECATION NOTICE:** This data source has been deprecated.
 *
 * Provides information about Linode MySQL Database Backups that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-databases-mysql-instance-backups).
 *
 * ## Example Usage
 *
 * Get information about all backups for a MySQL database:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const all_backups = linode.getDatabaseMysqlBackups({
 *     databaseId: 12345,
 * });
 * ```
 *
 * Get information about all automatic MySQL Database Backups:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const auto_backups = linode.getDatabaseMysqlBackups({
 *     databaseId: 12345,
 *     filters: [{
 *         name: "type",
 *         values: ["auto"],
 *     }],
 * });
 * ```
 */
function getDatabaseMysqlBackups(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getDatabaseMysqlBackups:getDatabaseMysqlBackups", {
        "databaseId": args.databaseId,
        "filters": args.filters,
        "latest": args.latest,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getDatabaseMysqlBackups = getDatabaseMysqlBackups;
/**
 * > **DEPRECATION NOTICE:** This data source has been deprecated.
 *
 * Provides information about Linode MySQL Database Backups that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-databases-mysql-instance-backups).
 *
 * ## Example Usage
 *
 * Get information about all backups for a MySQL database:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const all_backups = linode.getDatabaseMysqlBackups({
 *     databaseId: 12345,
 * });
 * ```
 *
 * Get information about all automatic MySQL Database Backups:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const auto_backups = linode.getDatabaseMysqlBackups({
 *     databaseId: 12345,
 *     filters: [{
 *         name: "type",
 *         values: ["auto"],
 *     }],
 * });
 * ```
 */
function getDatabaseMysqlBackupsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getDatabaseMysqlBackups:getDatabaseMysqlBackups", {
        "databaseId": args.databaseId,
        "filters": args.filters,
        "latest": args.latest,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getDatabaseMysqlBackupsOutput = getDatabaseMysqlBackupsOutput;
//# sourceMappingURL=getDatabaseMysqlBackups.js.map