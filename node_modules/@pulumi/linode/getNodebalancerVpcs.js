"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNodebalancerVpcsOutput = exports.getNodebalancerVpcs = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * > **Limited Availability** VPC-attached NodeBalancers may not currently be available to all users and may require the `apiVersion` provider argument must be set to `v4beta`.
 *
 * Provides information about Linode NodeBalancers VPC configurations that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-node-balancers).
 *
 * ## Example Usage
 *
 * Retrieve all VPC configurations under a NodeBalancer:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const vpc_configs = linode.getNodebalancerVpcs({
 *     nodebalancerId: 12345,
 * });
 * ```
 *
 * Retrieve all VPC configurations under a NodeBalancer with an IPv4 range of "10.0.0.4/30":
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const vpc_configs = linode.getNodebalancerVpcs({
 *     nodebalancerId: 12345,
 *     filters: [{
 *         name: "ipv4_range",
 *         values: ["10.0.0.4/30"],
 *     }],
 * });
 * ```
 *
 * ## Filterable Fields
 *
 * * `id`
 *
 * * `ipv4Range`
 *
 * * `nodebalancerId`
 *
 * * `subnetId`
 *
 * * `vpcId`
 */
function getNodebalancerVpcs(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getNodebalancerVpcs:getNodebalancerVpcs", {
        "filters": args.filters,
        "nodebalancerId": args.nodebalancerId,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getNodebalancerVpcs = getNodebalancerVpcs;
/**
 * > **Limited Availability** VPC-attached NodeBalancers may not currently be available to all users and may require the `apiVersion` provider argument must be set to `v4beta`.
 *
 * Provides information about Linode NodeBalancers VPC configurations that match a set of filters.
 * For more information, see the [Linode APIv4 docs](https://techdocs.akamai.com/linode-api/reference/get-node-balancers).
 *
 * ## Example Usage
 *
 * Retrieve all VPC configurations under a NodeBalancer:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const vpc_configs = linode.getNodebalancerVpcs({
 *     nodebalancerId: 12345,
 * });
 * ```
 *
 * Retrieve all VPC configurations under a NodeBalancer with an IPv4 range of "10.0.0.4/30":
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as linode from "@pulumi/linode";
 *
 * const vpc_configs = linode.getNodebalancerVpcs({
 *     nodebalancerId: 12345,
 *     filters: [{
 *         name: "ipv4_range",
 *         values: ["10.0.0.4/30"],
 *     }],
 * });
 * ```
 *
 * ## Filterable Fields
 *
 * * `id`
 *
 * * `ipv4Range`
 *
 * * `nodebalancerId`
 *
 * * `subnetId`
 *
 * * `vpcId`
 */
function getNodebalancerVpcsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("linode:index/getNodebalancerVpcs:getNodebalancerVpcs", {
        "filters": args.filters,
        "nodebalancerId": args.nodebalancerId,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts);
}
exports.getNodebalancerVpcsOutput = getNodebalancerVpcsOutput;
//# sourceMappingURL=getNodebalancerVpcs.js.map